services:
  postgres:
    image: postgres:15.3-alpine
    container_name: amex_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: amex_coding
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: amex_redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: amex_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/amex_coding
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-here-change-in-production
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: amex_celery
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/amex_coding
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-here-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.core.celery_app worker --loglevel=info

  flower:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: amex_flower
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis:6379
    depends_on:
      - redis
      - celery
    command: celery -A app.core.celery_app flower

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    container_name: amex_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WEBSOCKET_URL: ws://localhost:8000/ws
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  redis_data: